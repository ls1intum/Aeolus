name: create and push docker images

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - develop
    paths-ignore:
      - "README.md"
      - ".github/workflows/python-**.yaml"
      - ".github/workflows/deploy-**.yaml"
      - ".github/workflows/json-schema-generation.yaml"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./docker/cli/Dockerfile-slim
            image: ghcr.io/${{ github.repository }}/cli
          - dockerfile: ./docker/worker/Dockerfile
            image: ghcr.io/${{ github.repository }}/worker
          - dockerfile: ./docker/bamboo-generator/Dockerfile
            image: ghcr.io/${{ github.repository }}/bamboo-generator
          - dockerfile: ./docker/api/Dockerfile-slim
            image: ghcr.io/${{ github.repository }}/api
          - dockerfile: ./docker/playground/Dockerfile
            image: ghcr.io/${{ github.repository }}/playground
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute Tag
        uses: actions/github-script@v7
        id: compute-tag
        with:
          result-encoding: string
          script: |
            if (context.eventName === "pull_request") {
              return "pr-" + context.issue.number;
            }
            if (context.eventName === "release") {
              return "latest";
            }
            if (context.eventName === "push") {
              if (context.ref.startsWith("refs/tags/")) {
                return context.ref.slice(10);
              }
              if (context.ref === "refs/heads/develop") {
                return "nightly";
              }
            }
            return "FALSE";
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.image }}
          tags: |
            # set latest tag for default branch
            type=raw,value={{date 'YYYYMMDD-hhmmss' tz='Europe/Berlin'}}
            type=ref,event=pr
            type=sha
            type=raw,value={{steps.compute-tag.outputs.result}}
            type=raw,value=nightly,enable={{is_default_branch}}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=min

